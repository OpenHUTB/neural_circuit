#!/bin/sh
#
#  script to find branch points and tips
#
awk 'BEGIN {
       maxnodes = 50000;
       distlimit = 1.5;
       soma = 0;
       for (i=0; i<maxnodes; i++) isnode[i] = 0;
       
       for (i=0; i<maxnodes; i++) isparent[i] = 0;
       for (i=0; i<maxnodes; i++) nodeparent[i] = 0;
       for (i=0; i<maxnodes; i++) istip[i] = 0;
       for (i=0; i<maxnodes; i++) isbranchpnt[i] = 0;
       for (i=0; i<maxnodes; i++) xpos[i] = 0;
       for (i=0; i<maxnodes; i++) ypos[i] = 0;
       for (i=0; i<maxnodes; i++) ypos[i] = 0;
     }
     function dist(a,b) {
       	    return sqrt ((xpos[a] - xpos[b])^2 + (ypos[a] - ypos[b])^2 + (zpos[a] - zpos[b])^2)
     }

     !/^#/ { 
	    node = $1; parent = $2; 
            nodeparent[node] = parent;
            xpos[node] = $4;
            ypos[node] = $5;
            zpos[node] = $6;
	    isnode[node] = 1;
	    isparent[parent]++;
	} 
      END { 
            for (i=0; i<maxnodes; i++) {					# find all tips
		    if (isnode[i] && isparent[i] == 0) istip[i] = 1;
	    }
            for (i=0; i<maxnodes; i++) {					 # find all branch points
		    if (isparent[i] > 1) isbranchpnt[i] = 1; 
            }

            # for each tip, find parent branch point 

            for (i=0; i<maxnodes; i++) {					# find parents, test distance
		    if (istip[i]) {
			   for (j=i; dist(i,j) < distlimit; j=k) {
			        k = nodeparent[j];
				# print "checking",i,k;
				if (k==soma) break;
			        if (isbranchpnt[k]) {
					if (dist(i,k) < distlimit) {
						if (--isparent[k]<2) isbranchpnt[k] = 0;
						istip[i] = 0;
						break;
					}
			        }
			   }
		    }
	    }
	    printf ("Using distance criterion %g um\n",distlimit);
	    printf ("Branch points: \n");
            for (i=0; i<maxnodes; i++) {
		    if (isbranchpnt[i]) { printf ("%4s ",i); } 
            }
            printf ("\n\n");
            printf ("Tips:  \n");
            for (i=0; i<maxnodes; i++) {
		    if (istip[i]) { printf ("%4s ",i);}
            }
            printf ("\n");
      }
   ' $1
